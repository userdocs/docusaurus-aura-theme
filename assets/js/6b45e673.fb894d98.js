"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[869],{931:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=r(4848),s=r(8453);const o={},c=void 0,a={id:"js",title:"js",description:"test",source:"@site/docs/js.md",sourceDirName:".",slug:"/js",permalink:"/docusaurus-aura-theme/docs/js",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/js.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ini",permalink:"/docusaurus-aura-theme/docs/ini"},next:{title:"json",permalink:"/docusaurus-aura-theme/docs/json"}},d={},l=[];function i(e){const n={code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"test"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import React, { useEffect } from "react";\r\nimport ExecutionEnvironment from "@docusaurus/ExecutionEnvironment";\r\n\r\nconst AdvMd = ({ children }) => {\r\n  const advanced = ExecutionEnvironment.canUseDOM\r\n    ? JSON.parse(window.localStorage.getItem("advanced"))\r\n    : false;\r\n\r\n  useEffect(() => {\r\n    const AdvancedTitleList = [];\r\n    const AdvancedTocList = [];\r\n    const DefaultTocList = [];\r\n\r\n    const HideTheseTocs = document.querySelectorAll(\r\n      "#Advanced-class h1,#Advanced-class h2,#Advanced-class h3,#Advanced-class h4,#Advanced-class h5,#Advanced-class h6"\r\n    );\r\n\r\n    if (HideTheseTocs !== null) {\r\n      for (let i = 0; i < HideTheseTocs.length; i++) {\r\n        let AdvancedTitleId = HideTheseTocs[i].id;\r\n        AdvancedTitleList.push("#" + AdvancedTitleId);\r\n      }\r\n    }\r\n\r\n    const AdvancedTocHref = document.querySelectorAll(\r\n      "a.table-of-contents__link"\r\n    );\r\n\r\n    for (let i = 0; i < AdvancedTocHref.length; i++) {\r\n      if (AdvancedTitleList.includes(AdvancedTocHref[i].hash)) {\r\n        AdvancedTocList.push(AdvancedTocHref[i]);\r\n      } else {\r\n        DefaultTocList.push(AdvancedTocHref[i]);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < DefaultTocList.length; i++) {\r\n      DefaultTocList[i].classList.add("default-toc-show");\r\n    }\r\n\r\n    for (let i = 0; i < AdvancedTocList.length; i++) {\r\n      AdvancedTocList[i].classList.add("Advanced-class");\r\n      for (let element of document.getElementsByClassName("Advanced-class")) {\r\n        if (advanced === false || advanced === null) {\r\n          element.style.display = "none";\r\n        } else {\r\n          element.style.display = "block";\r\n        }\r\n      }\r\n    }\r\n  }, [advanced]);\r\n\r\n  return (\r\n    <span\r\n      id="Advanced-class"\r\n      className="Advanced-class"\r\n      style={{ display: advanced ? "block" : "none" }}\r\n    >\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default AdvMd;\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import React, { useState, useEffect } from "react";\r\nimport Toggle from "react-toggle";\r\nimport "react-toggle/style.css";\r\nimport { GiBrain } from "react-icons/gi";\r\nimport { MdOutlineMenuBook } from "react-icons/md";\r\nimport ExecutionEnvironment from "@docusaurus/ExecutionEnvironment";\r\n\r\nfunction getToggled() {\r\n  if (!ExecutionEnvironment.canUseDOM) return false;\r\n  const toggle = window.localStorage.getItem("advanced");\r\n  return JSON.parse(toggle);\r\n}\r\n\r\nfunction setToggled(toggled) {\r\n  if (!ExecutionEnvironment.canUseDOM) return;\r\n  const toggledJSON = JSON.stringify(toggled);\r\n  window.localStorage.setItem("advanced", toggledJSON);\r\n}\r\n\r\nfunction App() {\r\n  const [toggle, setToggle] = useState(getToggled());\r\n\r\n  useEffect(() => {\r\n    setToggled(toggle);\r\n  }, [toggle]);\r\n\r\n  return (\r\n    <div>\r\n      <label className="fuggo-label advanced-button">\r\n        <Toggle\r\n          className="fuggo-toggle"\r\n          checked={toggle}\r\n          icons={{\r\n            checked: <GiBrain />,\r\n            unchecked: <MdOutlineMenuBook />,\r\n          }}\r\n          onChange={() => {\r\n            setToggle((prev) => !prev);\r\n            for (let element of document.getElementsByClassName(\r\n              "Advanced-class"\r\n            )) {\r\n              {\r\n                toggle\r\n                  ? (element.style.display = "none")\r\n                  : (element.style.display = "block");\r\n              }\r\n            }\r\n          }}\r\n        ></Toggle>\r\n        <span className="fuggo-span">{toggle ? "Advanced" : "Basic"}</span>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>a});var t=r(6540);const s={},o=t.createContext(s);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);